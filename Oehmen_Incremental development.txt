Adam Oehmen
Applied Programming Concepts
Task 2
Incremental development
Due: 5/28/23


Software Specification
Feasibility study: can a scheduling system be built with current software – yes, it's already been done. Is it affordable – yes.
Requirements elicitation and analysis: Interview teachers, administrators and students for what is needed and what is a plus for the system.
        
Requirements specification:
Database of users: the system should work for 100 students, 10 instructors, and 1 admin, however, we will test with fewer. 
Database of courses: this will contain information such as the CRN, course name, times, and instructor. 
Three types of users:
         Students – can register, can see available courses and their own schedule.
Instructors – can see available courses and their own course roster. 
Admins – can see everything, can edit courses/users/schedules. 
The system should include multiple semesters, print-out of schedule, scheduling preferences.
The system as a whole and all components must be tested thoroughly
The base class of the system is user with: 
Attributes: first name, last name, ID. 
Methods: set function for each attribute, and a function to print all info for the object. 
There will be three derived classes: 
All derived classes must contain any additional attributes and appropriate set/get functions. 
student – the student class will have functions that allow them to search courses, add/drop courses, print their schedule. 
instructor – the instructor class will have functions that allow them to print their schedule, print their class list, and search for courses. 
admin – the admin class will have functions that allow them to add courses to the system, remove courses from the system, add/remove users, add/remove student from a course, search and print rosters and courses


The incremental development method allows us to keep testing and resigning our project. 
The incremental model says that we can do our original planning and code part then test. 
Depending on how the tests goes we can go backand reiterate the system allowing us to then work on new designs and implementation. 
As we learn we can in class and find ways of coding and implementing databases we can go back and redesign our program with new concepts that can make it better. 
One example of incrementation is:
1. To start by having a system that is just the classes for studnets, admins, and teachers 
2. Add a system for the database interaction with a program such as SQL lite 
3. Add a GUI for the user to be able to access the information and interact with the class functions 
After each of these steps we can test and make sure our system is operational and make any required design changes.

Dan Comments:
-Good explaination of how we would use the incremental process effectively
-Could add more decriptive explaination of each iteration of the project

***Good content
I think a bullet point format would be easier to follow along with
also to organize information better
Liam Nasr***
